#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Envision.ConfigurationManagement
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="ETCM")]
	public partial class ETCMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIssue(Issue instance);
    partial void UpdateIssue(Issue instance);
    partial void DeleteIssue(Issue instance);
    #endregion
		
		public ETCMDataContext() : 
				base(global::Envision.ConfigurationManagement.Properties.Settings.Default.ETCMConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ETCMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ETCMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ETCMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ETCMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Issue> Issues
		{
			get
			{
				return this.GetTable<Issue>();
			}
		}
	}
	
	[Table(Name="dbo.Issue")]
	public partial class Issue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PRN;
		
		private string _RequestType;
		
		private string _Title;
		
		private string _AssignedTo;
		
		private string _ReportedBy;
		
		private string _Status;
		
		private int _Priority;
		
		private string _Severity;
		
		private System.DateTime _DateReported;
		
		private System.Nullable<System.DateTime> _DateFixed;
		
		private System.Nullable<System.DateTime> _DateClosed;
		
		private string _AssignedToProject;
		
		private string _ReportedInVersion;
		
		private string _CodeReviewed;
		
		private string _Product;
		
		private string _Component;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPRNChanging(int value);
    partial void OnPRNChanged();
    partial void OnRequestTypeChanging(string value);
    partial void OnRequestTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAssignedToChanging(string value);
    partial void OnAssignedToChanged();
    partial void OnReportedByChanging(string value);
    partial void OnReportedByChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnSeverityChanging(string value);
    partial void OnSeverityChanged();
    partial void OnDateReportedChanging(System.DateTime value);
    partial void OnDateReportedChanged();
    partial void OnDateFixedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateFixedChanged();
    partial void OnDateClosedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateClosedChanged();
    partial void OnAssignedToProjectChanging(string value);
    partial void OnAssignedToProjectChanged();
    partial void OnReportedInVersionChanging(string value);
    partial void OnReportedInVersionChanged();
    partial void OnCodeReviewedChanging(string value);
    partial void OnCodeReviewedChanged();
    partial void OnProductChanging(string value);
    partial void OnProductChanged();
    partial void OnComponentChanging(string value);
    partial void OnComponentChanged();
    #endregion
		
		public Issue()
		{
			OnCreated();
		}
		
		[Column(Storage="_PRN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PRN
		{
			get
			{
				return this._PRN;
			}
			set
			{
				if ((this._PRN != value))
				{
					this.OnPRNChanging(value);
					this.SendPropertyChanging();
					this._PRN = value;
					this.SendPropertyChanged("PRN");
					this.OnPRNChanged();
				}
			}
		}
		
		[Column(Storage="_RequestType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RequestType
		{
			get
			{
				return this._RequestType;
			}
			set
			{
				if ((this._RequestType != value))
				{
					this.OnRequestTypeChanging(value);
					this.SendPropertyChanging();
					this._RequestType = value;
					this.SendPropertyChanged("RequestType");
					this.OnRequestTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_AssignedTo", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string AssignedTo
		{
			get
			{
				return this._AssignedTo;
			}
			set
			{
				if ((this._AssignedTo != value))
				{
					this.OnAssignedToChanging(value);
					this.SendPropertyChanging();
					this._AssignedTo = value;
					this.SendPropertyChanged("AssignedTo");
					this.OnAssignedToChanged();
				}
			}
		}
		
		[Column(Storage="_ReportedBy", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string ReportedBy
		{
			get
			{
				return this._ReportedBy;
			}
			set
			{
				if ((this._ReportedBy != value))
				{
					this.OnReportedByChanging(value);
					this.SendPropertyChanging();
					this._ReportedBy = value;
					this.SendPropertyChanged("ReportedBy");
					this.OnReportedByChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[Column(Storage="_Severity", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Severity
		{
			get
			{
				return this._Severity;
			}
			set
			{
				if ((this._Severity != value))
				{
					this.OnSeverityChanging(value);
					this.SendPropertyChanging();
					this._Severity = value;
					this.SendPropertyChanged("Severity");
					this.OnSeverityChanged();
				}
			}
		}
		
		[Column(Storage="_DateReported", DbType="DateTime NOT NULL")]
		public System.DateTime DateReported
		{
			get
			{
				return this._DateReported;
			}
			set
			{
				if ((this._DateReported != value))
				{
					this.OnDateReportedChanging(value);
					this.SendPropertyChanging();
					this._DateReported = value;
					this.SendPropertyChanged("DateReported");
					this.OnDateReportedChanged();
				}
			}
		}
		
		[Column(Storage="_DateFixed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFixed
		{
			get
			{
				return this._DateFixed;
			}
			set
			{
				if ((this._DateFixed != value))
				{
					this.OnDateFixedChanging(value);
					this.SendPropertyChanging();
					this._DateFixed = value;
					this.SendPropertyChanged("DateFixed");
					this.OnDateFixedChanged();
				}
			}
		}
		
		[Column(Storage="_DateClosed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateClosed
		{
			get
			{
				return this._DateClosed;
			}
			set
			{
				if ((this._DateClosed != value))
				{
					this.OnDateClosedChanging(value);
					this.SendPropertyChanging();
					this._DateClosed = value;
					this.SendPropertyChanged("DateClosed");
					this.OnDateClosedChanged();
				}
			}
		}
		
		[Column(Storage="_AssignedToProject", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AssignedToProject
		{
			get
			{
				return this._AssignedToProject;
			}
			set
			{
				if ((this._AssignedToProject != value))
				{
					this.OnAssignedToProjectChanging(value);
					this.SendPropertyChanging();
					this._AssignedToProject = value;
					this.SendPropertyChanged("AssignedToProject");
					this.OnAssignedToProjectChanged();
				}
			}
		}
		
		[Column(Storage="_ReportedInVersion", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ReportedInVersion
		{
			get
			{
				return this._ReportedInVersion;
			}
			set
			{
				if ((this._ReportedInVersion != value))
				{
					this.OnReportedInVersionChanging(value);
					this.SendPropertyChanging();
					this._ReportedInVersion = value;
					this.SendPropertyChanged("ReportedInVersion");
					this.OnReportedInVersionChanged();
				}
			}
		}
		
		[Column(Storage="_CodeReviewed", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string CodeReviewed
		{
			get
			{
				return this._CodeReviewed;
			}
			set
			{
				if ((this._CodeReviewed != value))
				{
					this.OnCodeReviewedChanging(value);
					this.SendPropertyChanging();
					this._CodeReviewed = value;
					this.SendPropertyChanged("CodeReviewed");
					this.OnCodeReviewedChanged();
				}
			}
		}
		
		[Column(Storage="_Product", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this.OnProductChanging(value);
					this.SendPropertyChanging();
					this._Product = value;
					this.SendPropertyChanged("Product");
					this.OnProductChanged();
				}
			}
		}
		
		[Column(Storage="_Component", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Component
		{
			get
			{
				return this._Component;
			}
			set
			{
				if ((this._Component != value))
				{
					this.OnComponentChanging(value);
					this.SendPropertyChanging();
					this._Component = value;
					this.SendPropertyChanged("Component");
					this.OnComponentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
